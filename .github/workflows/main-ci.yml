name: Main Pipeline

on:
  pull_request:
    branches:
      - main
      - develop
      - feature/18-ci-cd-build-pipeline-with-github-actions


jobs:

  # Job 1: Code style and security checks
  code_check:
    name: Code Style and Security Check
    runs-on: ubuntu-latest
    if: false

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment using Poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Adjust the Python version to your needs

      # Step 3: Install Poetry
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      # Step 4: Install dependencies with Poetry
      - name: Install dependencies
        run: |
          poetry install

      # Step 5: Run ruff for linting
      - name: Run ruff for linting
        run: |
          poetry run ruff check .

      # Step 6: Run bandit for security checks
      - name: Run bandit for security checks
        run: |
          poetry run bandit -r .


  # Job 2: Run unit tests
  run_tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: code_check  # Ensure code style and security checks pass first
    if: false

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment using Poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Step 3: Install Poetry
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      # Step 4: Install dependencies with Poetry
      - name: Install dependencies
        run: |
          poetry install

      # Step 5: Run tests
      - name: Run tests
        run: |
          poetry run pytest --alluredir="reports/allure-report" --cov=src --cov-report term-missing

  # Job 3: Bump version
  bump-version:
    name: Run bump version using commitizen
    runs-on: ubuntu-latest
#    needs: code-check  # Ensure tests are pass first

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Bump version
      - name: Bump version
        uses: ./actions/bumpversion
